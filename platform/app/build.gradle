apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion versions.compileSdk

    defaultConfig {
        applicationId "ru.gross.sample"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildFeatures {
        compose true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility versions.jvmTarget
        targetCompatibility versions.jvmTarget
    }

    kotlinOptions {
        jvmTarget = versions.jvmTarget
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    composeOptions {
        kotlinCompilerExtensionVersion = versions.compose
    }
}

configurations.all {
    resolutionStrategy.force "org.antlr:antlr4-runtime:4.7.1"
    resolutionStrategy.force "org.antlr:antlr4-tool:4.7.1"
}

dependencies {
    implementation project(path: ':data')
    implementation project(path: ':domain')
    implementation project(path: ':interactors')
    api project(path: ':platform:mvi')
    api project(path: ':platform:core')
}

// jetbrains
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
}

//androidx
dependencies {
    implementation "androidx.core:core-ktx:$versions.core"

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$versions.lifecycle"

    // navigation
    implementation "androidx.navigation:navigation-compose:$versions.navigation"

    // activity
    implementation "androidx.activity:activity-compose:$versions.activity"

    // ui
    implementation "androidx.compose.ui:ui:$versions.compose_old"
    implementation "androidx.compose.ui:ui-tooling-preview:$versions.compose_old"

    // material
    implementation "androidx.compose.material:material:$versions.compose_old"

    // constraint
    implementation "androidx.constraintlayout:constraintlayout-compose:$versions.constraintlayout"

    // appcompat
    implementation "androidx.appcompat:appcompat:$versions.appcompat"

    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$versions.compose_old"
    debugImplementation "androidx.compose.ui:ui-tooling:$versions.compose_old"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$versions.compose_old"
}

// dagger hilt
dependencies {
    implementation "com.google.dagger:hilt-android:$versions.hilt"
    implementation "androidx.hilt:hilt-navigation-compose:$versions.hilt_navigation"
    kapt "com.google.dagger:hilt-compiler:$versions.hilt"
}

// canary
dependencies {
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$versions.leakCanary"
}